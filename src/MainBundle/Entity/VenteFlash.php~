<?php

namespace MainBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;



/**
 * VenteFlash
 *
 * @ORM\Table(name="vente_flash")
 * @ORM\Entity(repositoryClass="MainBundle\Repository\VenteFlashRepository")
 */
class VenteFlash
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="theme", type="string", length=255)
     */

    private $theme;

    /**
     * @return mixed
     */
    public function getImage()
    {
        return $this->image;
    }

    /**
     * @param mixed $image
     */
    public function setImage($image)
    {
        $this->image = $image;
    }
    /**
     *
     * @ORM\OneToOne(targetEntity="MainBundle\Entity\Image", cascade={"persist"})
     * @ORM\JoinColumn(nullable=false)
     */

    private $image;



    /**
     * @var string
     *
     * @ORM\Column(name="description", type="string", length=255)
     */
    private $description;

    /**
     * @var string
     *
     * @ORM\Column(name="nom", type="string", length=255)
     */
    private $nom;
    /**
     * @ORM\ManyToOne(targetEntity="MainBundle\Entity\User", inversedBy="venteflash")

     *
     * @ORM\JoinColumn(onDelete="CASCADE")
     */

    private $vendeur;

    /**
     * @ORM\OneToMany(targetEntity="MainBundle\Entity\Product", mappedBy="Vente")

     * @ORM\JoinColumn(onDelete="CASCADE")
     */
    protected $produit;

    /**
     * @var \DateTime
     *
     * @Assert\GreaterThan("today")
     * @Assert\GreaterThan("now")

     * @ORM\Column(name="datedebut",type="date")
     */
    private $datedebut;

    /**
     * @return mixed
     */
    public function getVendeur()
    {
        return $this->vendeur;
    }

    /**
     * @param mixed $vendeur
     */
    public function setVendeur($vendeur)
    {
        $this->vendeur = $vendeur;
    }





    /**
     * @return mixed
     */
    public function getDatedebut()
    {
        return $this->datedebut;
    }

    /**
     * @param mixed $datedebut
     */
    public function setDatedebut($datedebut)
    {
        $this->datedebut = $datedebut;
    }

    /**
     * @return mixed
     */
    public function getStart()
    {
        return $this->start;
    }

    /**
     * @param mixed $start
     */
    public function setStart($start)
    {
        $this->start = $start;
    }

    /**
     * @return mixed
     */
    public function getFinish()
    {
        return $this->finish;
    }

    /**
     * @param mixed $finish
     */
    public function setFinish($finish)
    {
        $this->finish = $finish;
    }




    /**
     * @var \DateTime
     *
     * @Assert\GreaterThan("today")
     * @Assert\GreaterThan("now" )
     * @ORM\Column(name="finish",type="date")
     */
    private $finish;

    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set theme
     *
     * @param string $theme
     *
     * @return VenteFlash
     */
    public function setTheme($theme)
    {
        $this->theme = $theme;

        return $this;
    }

    /**
     * Get theme
     *
     * @return string
     */
    public function getTheme()
    {
        return $this->theme;
    }

    /**
     * Set description
     *
     * @param string $description
     *
     * @return VenteFlash
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set nom
     *
     * @param string $nom
     *
     * @return VenteFlash
     */
    public function setNom($nom)
    {
        $this->nom = $nom;

        return $this;
    }

    /**
     * Get nom
     *
     * @return string
     */
    public function getNom()
    {
        return $this->nom;
    }
    /**
     * @Assert\IsTrue(message = "Startime should be lesser than EndTime")
     */
    public function isStartBeforeEnd()
    {
        return $this->getDatedebut() <= $this->getFinish();
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->produit = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add produit
     *
     * @param \MainBundle\Entity\Product $produit
     *
     * @return VenteFlash
     */
    public function addProduit(\MainBundle\Entity\Product $produit)
    {
        $this->produit[] = $produit;

        return $this;
    }

    /**
     * Remove produit
     *
     * @param \MainBundle\Entity\Product $produit
     */
    public function removeProduit(\MainBundle\Entity\Product $produit)
    {
        $this->produit->removeElement($produit);
    }

    /**
     * Get produit
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getProduit()
    {
        return $this->produit;
    }
}
